apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "historical.fullname" . }}
  labels:
    app: {{ template "historical.name" . }}
    chart: {{ template "historical.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "historical.name" . }}
      release: {{ .Release.Name }}
  serviceName: {{ template "historical.fullname" . }}-headless
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
{{- if and .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: segment-cache
    {{- with .Values.persistence.annotations  }}
      annotations:
{{ toYaml . | indent 8 }}
    {{- end }}
    spec:
      accessModes: 
        {{- range .Values.persistence.accessModes }}
        - {{ . | quote }}
        {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      storageClassName: {{ .Values.persistence.storageClassName }}
{{- end }}
  template:
    metadata:
      labels:
        app: {{ template "historical.name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
      {{- end }}
      annotations:
        checksum/config-common: {{ .Values.global.druid | toYaml | sha256sum }}
        checksum/config: {{ .Values.druid | toYaml | sha256sum }}
      {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      volumes:
        - name: {{ .Release.Name }}-common
          configMap:
            name: {{ .Release.Name }}-common
        - name: {{ template "historical.fullname" . }}
          configMap:
            name: {{ template "historical.fullname" . }}
      {{- if not .Values.persistence.enabled }}
        - name: segment-cache
          emptyDir: {}
      {{- end }}
        - name: {{ .Release.Name }}-jmx-exporter
          configMap:
            name: {{ .Release.Name }}-jmx-exporter
{{ include "monitoring.volumes" . | indent 8 }}
      containers:
        - name: jmx-exporter
          image: "{{ .Values.global.jmx_exporter.image.repository }}:{{ .Values.global.jmx_exporter.image.tag }}"
          imagePullPolicy: Always
          volumeMounts:
            - name: {{ .Release.Name }}-jmx-exporter
              mountPath: /opt/jmx_exporter/config.yml
              subPath: config.yml
        - name: druid # {{ .Chart.Name }} - universal container name for druid is better
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DRUID_ROLE
              value: {{ template "historical.name" . }}
          {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
            - name: JAVA_OPTS
              value: {{ .Values.druid.JAVA_OPTS | quote }}
              #            - name: MY_POD_IP
              #              valueFrom:
              #                fieldRef:
              #                  fieldPath: status.podIP
          ports:
            - containerPort: {{.Values.druid.port}}
              protocol: TCP
              name: http
          readinessProbe:
            httpGet:
              path: /druid/historical/v1/readiness
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /druid/historical/v1/readiness
              port: http
            initialDelaySeconds: 300
            periodSeconds: 15
          volumeMounts:
            - mountPath: /opt/druid/conf/_common/
              name: {{ .Release.Name }}-common
            - mountPath: /opt/druid/conf/historical/
              name: {{ template "historical.fullname" . }}
            - mountPath: /var/druid/segment-cache
              name: segment-cache
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{ include "monitoring.containers" . | indent 8 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
